[{"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/index.js":"1","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/App.js":"2","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/Content.js":"3","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/AllNom.js":"4","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/AddMovie.js":"5","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/Landing.js":"6","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/firebase.js":"7","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/ShortList.js":"8","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/DisplayMovie.js":"9","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/common/SmallButton.js":"10","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/common/LogInButton.js":"11","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/common/Input.js":"12"},{"size":197,"mtime":1609635387217,"results":"13","hashOfConfig":"14"},{"size":618,"mtime":1609663268494,"results":"15","hashOfConfig":"14"},{"size":507,"mtime":1609666303650,"results":"16","hashOfConfig":"14"},{"size":3972,"mtime":1609802531077,"results":"17","hashOfConfig":"14"},{"size":2470,"mtime":1609767897099,"results":"18","hashOfConfig":"14"},{"size":2896,"mtime":1609807631733,"results":"19","hashOfConfig":"14"},{"size":748,"mtime":1609720124765,"results":"20","hashOfConfig":"14"},{"size":3715,"mtime":1609768328019,"results":"21","hashOfConfig":"14"},{"size":4480,"mtime":1609804901059,"results":"22","hashOfConfig":"14"},{"size":459,"mtime":1609765346968,"results":"23","hashOfConfig":"14"},{"size":773,"mtime":1609723282782,"results":"24","hashOfConfig":"14"},{"size":978,"mtime":1609667318238,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1hexzau",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/index.js",[],["52","53"],"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/App.js",[],"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/Content.js",[],"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/AllNom.js",[],"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/AddMovie.js",[],"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/Landing.js",[],"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/firebase.js",[],"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/ShortList.js",["54","55"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport firebase from \"../firebase.js\";\nimport { db } from \"../firebase.js\";\n\nimport { SmallButton } from \"./common/SmallButton.js\";\n\nconst List = styled.ul`\n  list-style: none;\n  margin-top: 2rem;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n  font-size: 1.2rem;\n  font-weight: 400;\n`;\n\nfunction ShortList({ myNoms, setMyNoms, setTitle }) {\n  const [user] = useAuthState(firebase.auth());\n\n  //gets existing user's data and put it into their nominations list; when log out remove the list; if new user (querySnapshot.forEach no loop) create that user\n  useEffect(() => {\n    let fetchedData = false;\n\n    async function getUsersList() {\n      const docRef = db.collection(\"userData\").where(\"uid\", \"==\", user.uid);\n      const querySnapshot = await docRef.get();\n      querySnapshot.forEach((doc) => {\n\n        fetchedData = true;\n        setMyNoms(doc.data().movies);\n      });\n    }\n\n    function tryAddUser() {\n      if (fetchedData) return;\n      // else {\n      //   for (let i=0; i<myNoms.length; i++){\n      //     myNoms[i].uid = user.uid;\n      //   }\n\n      //   db.collection(\"userData\").add({\n      //     uid: user.uid,\n      //     movies: myNoms,\n      //   });\n\n      //   fetchedData = false;\n      // }\n\n      \n      //do not include old data in the profile's nominations; start fresh\n      else{\n        setMyNoms([]);\n      }\n\n    }\n\n\n    //runner\n    if (user) {\n      getUsersList().then(tryAddUser);\n    } else {\n      //for when log out\n      setMyNoms([]);\n      setTitle(\"\");\n    }\n\n\n  }, [user]);\n\n  //whenever new items add into the nomination list, add to the current user's list if logged in\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n\n    //updating with query need to use work around with get()\n    const docRef = db\n      .collection(\"userData\")\n      .where(\"uid\", \"==\", user.uid)\n      .limit(1);\n\n    docRef.get().then((query) => {\n      const match = query.docs[0];\n      if (match) {\n        match.ref.update({\n          movies: myNoms,\n        });\n      }\n    });\n  }, [myNoms]);\n\n  //remove movie, take it away from the nominations list (which as a result, will take away from user's list in database), and from the all nominations list\n  function removeMovie(e) {\n    const temp = e.target.parentNode.textContent;\n    const targetMovie = temp.split(\" (\")[0];\n    let targetMovieID = \"\";\n\n    setMyNoms((prev) =>\n      prev.filter((nom) => {\n        if (nom.Title === targetMovie) {\n          targetMovieID = nom.imdbID;\n          removeFromAllNom(); // to remove from all Nom after found the movie; if call outside of this, may remove before the target ID is set\n          return false; //false is fail test, and is removed\n        } else {\n          return true;\n        }\n      })\n    );\n\n    async function removeFromAllNom() {\n      const docRef = db\n        .collection(\"allNoms\")\n        .where(\"imdbID\", \"==\", targetMovieID);\n      const querySnapshot = await docRef.get();\n      querySnapshot.forEach((doc) => {\n        doc.ref.delete();\n      });\n    }\n\n  }\n\n  return (\n    <>\n      <List>\n        {myNoms.map((movie, index) => {\n          return (\n            <Item key={index}>\n              {movie.Title} ({movie.Year})\n              <SmallButton\n                mColor={(props) => props.theme.tchColor}\n                hColor={\"#DE3618\"}\n                onClick={removeMovie}\n              >\n                Remove\n              </SmallButton>{\" \"}\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n}\n\nexport default ShortList;\n","/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/DisplayMovie.js",[],"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/common/SmallButton.js",[],"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/common/LogInButton.js",[],"/Users/aaronxie/Documents/CodingProjects/movie-awards/src/components/common/Input.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":74,"column":6,"nodeType":"62","endLine":74,"endColumn":12,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":96,"column":6,"nodeType":"62","endLine":96,"endColumn":14,"suggestions":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setMyNoms' and 'setTitle'. Either include them or remove the dependency array. If 'setMyNoms' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["68"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [setMyNoms, setTitle, user]",{"range":"74","text":"75"},"Update the dependencies array to be: [myNoms, user]",{"range":"76","text":"77"},[1712,1718],"[setMyNoms, setTitle, user]",[2219,2227],"[myNoms, user]"]